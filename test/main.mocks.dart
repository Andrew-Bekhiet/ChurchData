// Mocks generated by Mockito 5.4.4 from annotations
// in churchdata/test/main.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:cloud_functions/cloud_functions.dart' as _i5;
import 'package:cloud_functions_platform_interface/cloud_functions_platform_interface.dart'
    as _i4;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:firebase_auth_mocks/src/mock_user.dart' as _i8;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:firebase_messaging/firebase_messaging.dart' as _i9;
import 'package:firebase_messaging_platform_interface/firebase_messaging_platform_interface.dart'
    as _i3;
import 'package:firebase_remote_config/firebase_remote_config.dart' as _i11;
import 'package:firebase_remote_config_platform_interface/firebase_remote_config_platform_interface.dart'
    as _i6;
import 'package:local_auth/src/local_auth.dart' as _i13;
import 'package:local_auth_android/local_auth_android.dart' as _i14;
import 'package:local_auth_darwin/local_auth_darwin.dart' as _i15;
import 'package:local_auth_windows/local_auth_windows.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i12;
import 'package:url_launcher_platform_interface/url_launcher_platform_interface.dart'
    as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationSettings_1 extends _i1.SmartFake
    implements _i3.NotificationSettings {
  _FakeNotificationSettings_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFunctionsPlatform_2 extends _i1.SmartFake
    implements _i4.FirebaseFunctionsPlatform {
  _FakeFirebaseFunctionsPlatform_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallable_3 extends _i1.SmartFake implements _i5.HttpsCallable {
  _FakeHttpsCallable_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_4 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigSettings_5 extends _i1.SmartFake
    implements _i6.RemoteConfigSettings {
  _FakeRemoteConfigSettings_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigValue_6 extends _i1.SmartFake
    implements _i6.RemoteConfigValue {
  _FakeRemoteConfigValue_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_7 extends _i1.SmartFake implements _i7.UserMetadata {
  _FakeUserMetadata_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_8 extends _i1.SmartFake implements _i7.MultiFactor {
  _FakeMultiFactor_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_9 extends _i1.SmartFake implements _i7.IdTokenResult {
  _FakeIdTokenResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_10 extends _i1.SmartFake
    implements _i7.UserCredential {
  _FakeUserCredential_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_11 extends _i1.SmartFake implements _i7.User {
  _FakeUser_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMockUser_12 extends _i1.SmartFake implements _i8.MockUser {
  _FakeMockUser_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_13 extends _i1.SmartFake
    implements _i7.ConfirmationResult {
  _FakeConfirmationResult_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallablePlatform_14 extends _i1.SmartFake
    implements _i4.HttpsCallablePlatform {
  _FakeHttpsCallablePlatform_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallableResult_15<T1> extends _i1.SmartFake
    implements _i5.HttpsCallableResult<T1> {
  _FakeHttpsCallableResult_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseMessaging].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseMessaging extends _i1.Mock implements _i9.FirebaseMessaging {
  MockFirebaseMessaging() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isAutoInitEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoInitEnabled),
        returnValue: false,
      ) as bool);

  @override
  _i10.Stream<String> get onTokenRefresh => (super.noSuchMethod(
        Invocation.getter(#onTokenRefresh),
        returnValue: _i10.Stream<String>.empty(),
      ) as _i10.Stream<String>);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i10.Future<_i3.RemoteMessage?> getInitialMessage() => (super.noSuchMethod(
        Invocation.method(
          #getInitialMessage,
          [],
        ),
        returnValue: _i10.Future<_i3.RemoteMessage?>.value(),
      ) as _i10.Future<_i3.RemoteMessage?>);

  @override
  _i10.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<String?> getAPNSToken() => (super.noSuchMethod(
        Invocation.method(
          #getAPNSToken,
          [],
        ),
        returnValue: _i10.Future<String?>.value(),
      ) as _i10.Future<String?>);

  @override
  _i10.Future<String?> getToken({String? vapidKey}) => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
          {#vapidKey: vapidKey},
        ),
        returnValue: _i10.Future<String?>.value(),
      ) as _i10.Future<String?>);

  @override
  _i10.Future<bool> isSupported() => (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<_i3.NotificationSettings> getNotificationSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationSettings,
          [],
        ),
        returnValue: _i10.Future<_i3.NotificationSettings>.value(
            _FakeNotificationSettings_1(
          this,
          Invocation.method(
            #getNotificationSettings,
            [],
          ),
        )),
      ) as _i10.Future<_i3.NotificationSettings>);

  @override
  _i10.Future<_i3.NotificationSettings> requestPermission({
    bool? alert = true,
    bool? announcement = false,
    bool? badge = true,
    bool? carPlay = false,
    bool? criticalAlert = false,
    bool? provisional = false,
    bool? sound = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
          {
            #alert: alert,
            #announcement: announcement,
            #badge: badge,
            #carPlay: carPlay,
            #criticalAlert: criticalAlert,
            #provisional: provisional,
            #sound: sound,
          },
        ),
        returnValue: _i10.Future<_i3.NotificationSettings>.value(
            _FakeNotificationSettings_1(
          this,
          Invocation.method(
            #requestPermission,
            [],
            {
              #alert: alert,
              #announcement: announcement,
              #badge: badge,
              #carPlay: carPlay,
              #criticalAlert: criticalAlert,
              #provisional: provisional,
              #sound: sound,
            },
          ),
        )),
      ) as _i10.Future<_i3.NotificationSettings>);

  @override
  _i10.Future<void> sendMessage({
    String? to,
    Map<String, String>? data,
    String? collapseKey,
    String? messageId,
    String? messageType,
    int? ttl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #to: to,
            #data: data,
            #collapseKey: collapseKey,
            #messageId: messageId,
            #messageType: messageType,
            #ttl: ttl,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> setAutoInitEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setAutoInitEnabled,
          [enabled],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> setDeliveryMetricsExportToBigQuery(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDeliveryMetricsExportToBigQuery,
          [enabled],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> setForegroundNotificationPresentationOptions({
    bool? alert = false,
    bool? badge = false,
    bool? sound = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setForegroundNotificationPresentationOptions,
          [],
          {
            #alert: alert,
            #badge: badge,
            #sound: sound,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> subscribeToTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #subscribeToTopic,
          [topic],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> unsubscribeFromTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribeFromTopic,
          [topic],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [FirebaseFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFunctions extends _i1.Mock implements _i5.FirebaseFunctions {
  MockFirebaseFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  _i4.FirebaseFunctionsPlatform get delegate => (super.noSuchMethod(
        Invocation.getter(#delegate),
        returnValue: _FakeFirebaseFunctionsPlatform_2(
          this,
          Invocation.getter(#delegate),
        ),
      ) as _i4.FirebaseFunctionsPlatform);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i5.HttpsCallable httpsCallable(
    String? name, {
    _i4.HttpsCallableOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallable,
          [name],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_3(
          this,
          Invocation.method(
            #httpsCallable,
            [name],
            {#options: options},
          ),
        ),
      ) as _i5.HttpsCallable);

  @override
  _i5.HttpsCallable httpsCallableFromUrl(
    String? url, {
    _i4.HttpsCallableOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallableFromUrl,
          [url],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_3(
          this,
          Invocation.method(
            #httpsCallableFromUrl,
            [url],
            {#options: options},
          ),
        ),
      ) as _i5.HttpsCallable);

  @override
  _i5.HttpsCallable httpsCallableFromUri(
    Uri? uri, {
    _i4.HttpsCallableOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallableFromUri,
          [uri],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_3(
          this,
          Invocation.method(
            #httpsCallableFromUri,
            [uri],
            {#options: options},
          ),
        ),
      ) as _i5.HttpsCallable);

  @override
  void useFunctionsEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #useFunctionsEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FirebaseRemoteConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseRemoteConfig extends _i1.Mock
    implements _i11.FirebaseRemoteConfig {
  MockFirebaseRemoteConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  DateTime get lastFetchTime => (super.noSuchMethod(
        Invocation.getter(#lastFetchTime),
        returnValue: _FakeDateTime_4(
          this,
          Invocation.getter(#lastFetchTime),
        ),
      ) as DateTime);

  @override
  _i6.RemoteConfigFetchStatus get lastFetchStatus => (super.noSuchMethod(
        Invocation.getter(#lastFetchStatus),
        returnValue: _i6.RemoteConfigFetchStatus.noFetchYet,
      ) as _i6.RemoteConfigFetchStatus);

  @override
  _i6.RemoteConfigSettings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeRemoteConfigSettings_5(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i6.RemoteConfigSettings);

  @override
  _i10.Stream<_i6.RemoteConfigUpdate> get onConfigUpdated =>
      (super.noSuchMethod(
        Invocation.getter(#onConfigUpdated),
        returnValue: _i10.Stream<_i6.RemoteConfigUpdate>.empty(),
      ) as _i10.Stream<_i6.RemoteConfigUpdate>);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i10.Future<bool> activate() => (super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<void> ensureInitialized() => (super.noSuchMethod(
        Invocation.method(
          #ensureInitialized,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> fetch() => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<bool> fetchAndActivate() => (super.noSuchMethod(
        Invocation.method(
          #fetchAndActivate,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  Map<String, _i6.RemoteConfigValue> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <String, _i6.RemoteConfigValue>{},
      ) as Map<String, _i6.RemoteConfigValue>);

  @override
  bool getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  int getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: 0,
      ) as int);

  @override
  double getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  String getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.method(
            #getString,
            [key],
          ),
        ),
      ) as String);

  @override
  _i6.RemoteConfigValue getValue(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
        ),
        returnValue: _FakeRemoteConfigValue_6(
          this,
          Invocation.method(
            #getValue,
            [key],
          ),
        ),
      ) as _i6.RemoteConfigValue);

  @override
  _i10.Future<void> setConfigSettings(
          _i6.RemoteConfigSettings? remoteConfigSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigSettings,
          [remoteConfigSettings],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> setDefaults(Map<String, dynamic>? defaultParameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDefaults,
          [defaultParameters],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [MockUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockUser extends _i1.Mock implements _i8.MockUser {
  MockMockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
      ) as bool);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  set displayName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #displayName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set photoURL(String? value) => super.noSuchMethod(
        Invocation.setter(
          #photoURL,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i7.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i7.UserInfo>[],
      ) as List<_i7.UserInfo>);

  @override
  _i7.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_7(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i7.UserMetadata);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);

  @override
  _i7.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_8(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i7.MultiFactor);

  @override
  _i10.Future<_i7.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i10.Future<_i7.IdTokenResult>.value(_FakeIdTokenResult_9(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i10.Future<_i7.IdTokenResult>);

  @override
  _i7.IdTokenResult getIdTokenResultSync() => (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResultSync,
          [],
        ),
        returnValue: _FakeIdTokenResult_9(
          this,
          Invocation.method(
            #getIdTokenResultSync,
            [],
          ),
        ),
      ) as _i7.IdTokenResult);

  @override
  _i10.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i10.Future<String>.value(_i12.dummyValue<String>(
          this,
          Invocation.method(
            #getIdToken,
            [forceRefresh],
          ),
        )),
      ) as _i10.Future<String>);

  @override
  _i10.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updateDisplayName(String? value) => (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updatePhotoURL(String? value) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<_i7.UserCredential> reauthenticateWithCredential(
          _i7.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue:
            _i10.Future<_i7.UserCredential>.value(_FakeUserCredential_10(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i10.Future<_i7.UserCredential>);

  @override
  _i10.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> sendEmailVerification(
          [_i7.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<_i7.UserCredential> linkWithCredential(
          _i7.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue:
            _i10.Future<_i7.UserCredential>.value(_FakeUserCredential_10(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i10.Future<_i7.UserCredential>);

  @override
  _i10.Future<_i7.UserCredential> linkWithProvider(
          _i7.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue:
            _i10.Future<_i7.UserCredential>.value(_FakeUserCredential_10(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i10.Future<_i7.UserCredential>);

  @override
  _i10.Future<_i7.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i10.Future<_i7.User>.value(_FakeUser_11(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i10.Future<_i7.User>);

  @override
  _i8.MockUser copyWith({
    bool? isAnonymous,
    bool? isEmailVerified,
    String? uid,
    String? email,
    String? displayName,
    String? phoneNumber,
    String? photoURL,
    List<_i7.UserInfo>? providerData,
    String? refreshToken,
    _i7.UserMetadata? metadata,
    _i7.IdTokenResult? idTokenResult,
    DateTime? idTokenAuthTime,
    DateTime? idTokenExp,
    Map<String, dynamic>? customClaim,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #isAnonymous: isAnonymous,
            #isEmailVerified: isEmailVerified,
            #uid: uid,
            #email: email,
            #displayName: displayName,
            #phoneNumber: phoneNumber,
            #photoURL: photoURL,
            #providerData: providerData,
            #refreshToken: refreshToken,
            #metadata: metadata,
            #idTokenResult: idTokenResult,
            #idTokenAuthTime: idTokenAuthTime,
            #idTokenExp: idTokenExp,
            #customClaim: customClaim,
          },
        ),
        returnValue: _FakeMockUser_12(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #isAnonymous: isAnonymous,
              #isEmailVerified: isEmailVerified,
              #uid: uid,
              #email: email,
              #displayName: displayName,
              #phoneNumber: phoneNumber,
              #photoURL: photoURL,
              #providerData: providerData,
              #refreshToken: refreshToken,
              #metadata: metadata,
              #idTokenResult: idTokenResult,
              #idTokenAuthTime: idTokenAuthTime,
              #idTokenExp: idTokenExp,
              #customClaim: customClaim,
            },
          ),
        ),
      ) as _i8.MockUser);

  @override
  _i10.Future<_i7.UserCredential> reauthenticateWithProvider(
          _i7.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue:
            _i10.Future<_i7.UserCredential>.value(_FakeUserCredential_10(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i10.Future<_i7.UserCredential>);

  @override
  _i10.Future<_i7.UserCredential> reauthenticateWithPopup(
          _i7.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue:
            _i10.Future<_i7.UserCredential>.value(_FakeUserCredential_10(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i10.Future<_i7.UserCredential>);

  @override
  _i10.Future<void> reauthenticateWithRedirect(_i7.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<_i7.UserCredential> linkWithPopup(_i7.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue:
            _i10.Future<_i7.UserCredential>.value(_FakeUserCredential_10(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i10.Future<_i7.UserCredential>);

  @override
  _i10.Future<void> linkWithRedirect(_i7.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<_i7.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue: _i10.Future<_i7.ConfirmationResult>.value(
            _FakeConfirmationResult_13(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i10.Future<_i7.ConfirmationResult>);

  @override
  _i10.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updatePhoneNumber(
          _i7.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i7.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [LocalAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalAuthentication extends _i1.Mock
    implements _i13.LocalAuthentication {
  MockLocalAuthentication() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<bool> get canCheckBiometrics => (super.noSuchMethod(
        Invocation.getter(#canCheckBiometrics),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> authenticate({
    required String? localizedReason,
    Iterable<_i14.AuthMessages>? authMessages = const [
      _i15.IOSAuthMessages(),
      _i14.AndroidAuthMessages(),
      _i16.WindowsAuthMessages(),
    ],
    _i14.AuthenticationOptions? options = const _i14.AuthenticationOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
          {
            #localizedReason: localizedReason,
            #authMessages: authMessages,
            #options: options,
          },
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> stopAuthentication() => (super.noSuchMethod(
        Invocation.method(
          #stopAuthentication,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> isDeviceSupported() => (super.noSuchMethod(
        Invocation.method(
          #isDeviceSupported,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<List<_i14.BiometricType>> getAvailableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue:
            _i10.Future<List<_i14.BiometricType>>.value(<_i14.BiometricType>[]),
      ) as _i10.Future<List<_i14.BiometricType>>);
}

/// A class which mocks [HttpsCallable].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpsCallable extends _i1.Mock implements _i5.HttpsCallable {
  MockHttpsCallable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.HttpsCallablePlatform get delegate => (super.noSuchMethod(
        Invocation.getter(#delegate),
        returnValue: _FakeHttpsCallablePlatform_14(
          this,
          Invocation.getter(#delegate),
        ),
      ) as _i4.HttpsCallablePlatform);

  @override
  _i10.Future<_i5.HttpsCallableResult<T>> call<T>([dynamic parameters]) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [parameters],
        ),
        returnValue: _i10.Future<_i5.HttpsCallableResult<T>>.value(
            _FakeHttpsCallableResult_15<T>(
          this,
          Invocation.method(
            #call,
            [parameters],
          ),
        )),
      ) as _i10.Future<_i5.HttpsCallableResult<T>>);
}

/// A class which mocks [UrlLauncherPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlLauncherPlatform extends _i1.Mock
    implements _i17.UrlLauncherPlatform {
  MockUrlLauncherPlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<bool> canLaunch(String? url) => (super.noSuchMethod(
        Invocation.method(
          #canLaunch,
          [url],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> launch(
    String? url, {
    required bool? useSafariVC,
    required bool? useWebView,
    required bool? enableJavaScript,
    required bool? enableDomStorage,
    required bool? universalLinksOnly,
    required Map<String, String>? headers,
    String? webOnlyWindowName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launch,
          [url],
          {
            #useSafariVC: useSafariVC,
            #useWebView: useWebView,
            #enableJavaScript: enableJavaScript,
            #enableDomStorage: enableDomStorage,
            #universalLinksOnly: universalLinksOnly,
            #headers: headers,
            #webOnlyWindowName: webOnlyWindowName,
          },
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> launchUrl(
    String? url,
    _i17.LaunchOptions? options,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchUrl,
          [
            url,
            options,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<void> closeWebView() => (super.noSuchMethod(
        Invocation.method(
          #closeWebView,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<bool> supportsMode(_i17.PreferredLaunchMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #supportsMode,
          [mode],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> supportsCloseForMode(_i17.PreferredLaunchMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #supportsCloseForMode,
          [mode],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}
