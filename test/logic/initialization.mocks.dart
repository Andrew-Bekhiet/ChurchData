// Mocks generated by Mockito 5.4.4 from annotations
// in churchdata/test/logic/initialization.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_functions/cloud_functions.dart' as _i3;
import 'package:cloud_functions_platform_interface/cloud_functions_platform_interface.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpsCallablePlatform_0 extends _i1.SmartFake
    implements _i2.HttpsCallablePlatform {
  _FakeHttpsCallablePlatform_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallableResult_1<T1> extends _i1.SmartFake
    implements _i3.HttpsCallableResult<T1> {
  _FakeHttpsCallableResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpsCallable].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpsCallable extends _i1.Mock implements _i3.HttpsCallable {
  @override
  _i2.HttpsCallablePlatform get delegate => (super.noSuchMethod(
        Invocation.getter(#delegate),
        returnValue: _FakeHttpsCallablePlatform_0(
          this,
          Invocation.getter(#delegate),
        ),
        returnValueForMissingStub: _FakeHttpsCallablePlatform_0(
          this,
          Invocation.getter(#delegate),
        ),
      ) as _i2.HttpsCallablePlatform);

  @override
  _i4.Future<_i3.HttpsCallableResult<T>> call<T>([dynamic parameters]) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [parameters],
        ),
        returnValue: _i4.Future<_i3.HttpsCallableResult<T>>.value(
            _FakeHttpsCallableResult_1<T>(
          this,
          Invocation.method(
            #call,
            [parameters],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i3.HttpsCallableResult<T>>.value(
            _FakeHttpsCallableResult_1<T>(
          this,
          Invocation.method(
            #call,
            [parameters],
          ),
        )),
      ) as _i4.Future<_i3.HttpsCallableResult<T>>);
}
